// <auto-generated />
using MediaCloud.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using System;

namespace MediaCloud.Domain.Migrations
{
    [DbContext(typeof(MediaCloudContext))]
    [Migration("20180507143005_AddedSeriesSeasonsAndEpisodes")]
    partial class AddedSeriesSeasonsAndEpisodes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("MediaCloud.Domain.Entities.Episode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("SeasonId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("SeasonId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("MediaCloud.Domain.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("PosterPath");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Item");
                });

            modelBuilder.Entity("MediaCloud.Domain.Entities.ItemLibrary", b =>
                {
                    b.Property<int>("ItemId");

                    b.Property<int>("LibraryId");

                    b.HasKey("ItemId", "LibraryId");

                    b.HasIndex("LibraryId");

                    b.ToTable("ItemLibraries");
                });

            modelBuilder.Entity("MediaCloud.Domain.Entities.Library", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Libraries");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Library");
                });

            modelBuilder.Entity("MediaCloud.Domain.Entities.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("SeriesId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("SeriesId");

                    b.ToTable("Season");
                });

            modelBuilder.Entity("MediaCloud.Domain.Entities.Movie", b =>
                {
                    b.HasBaseType("MediaCloud.Domain.Entities.Item");


                    b.ToTable("Movie");

                    b.HasDiscriminator().HasValue("Movie");
                });

            modelBuilder.Entity("MediaCloud.Domain.Entities.Series", b =>
                {
                    b.HasBaseType("MediaCloud.Domain.Entities.Item");


                    b.ToTable("Series");

                    b.HasDiscriminator().HasValue("Series");
                });

            modelBuilder.Entity("MediaCloud.Domain.Entities.MovieLibrary", b =>
                {
                    b.HasBaseType("MediaCloud.Domain.Entities.Library");


                    b.ToTable("MovieLibrary");

                    b.HasDiscriminator().HasValue("MovieLibrary");
                });

            modelBuilder.Entity("MediaCloud.Domain.Entities.Episode", b =>
                {
                    b.HasOne("MediaCloud.Domain.Entities.Season", "Season")
                        .WithMany("Episodes")
                        .HasForeignKey("SeasonId");
                });

            modelBuilder.Entity("MediaCloud.Domain.Entities.ItemLibrary", b =>
                {
                    b.HasOne("MediaCloud.Domain.Entities.Item", "Item")
                        .WithMany("ItemLibraries")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MediaCloud.Domain.Entities.Library", "Library")
                        .WithMany("ItemLibraries")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MediaCloud.Domain.Entities.Season", b =>
                {
                    b.HasOne("MediaCloud.Domain.Entities.Series", "Series")
                        .WithMany("Seasons")
                        .HasForeignKey("SeriesId");
                });
#pragma warning restore 612, 618
        }
    }
}
